import org.gradle.internal.os.OperatingSystem

apply plugin: 'java'
apply plugin: 'kotlin'

//apply plugin: 'application'
//mainClassName = "imgui.ImguiKt"
apply plugin: 'com.github.johnrengelman.shadow'

// jitpack
apply plugin: 'maven'
group = 'com.github.kotlin-graphics'

buildscript {

    ext.kotlinVersion = '1.2.51'

    repositories {
        jcenter()   // shadow
        mavenCentral()
        maven { setUrl("https://dl.bintray.com/kotlin/kotlin-eap") }
        maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation 'com.github.kotlin-graphics:uno-sdk:0c24215310'

    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.0.6'

    def joglVersion = '2.3.2'
    implementation "org.jogamp.gluegen:gluegen-rt-main:$joglVersion"
    implementation "org.jogamp.jogl:jogl-all-main:$joglVersion"

    ext.lwjglVersion = "3.2.0"
    switch (OperatingSystem.current()) {
        case OperatingSystem.WINDOWS:
            ext.lwjglNatives = "natives-windows"
            break
        case OperatingSystem.LINUX:
            ext.lwjglNatives = "natives-linux"
            break
        case OperatingSystem.MAC_OS:
            ext.lwjglNatives = "natives-macos"
            break
    }
    ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb"].each {
        String base = "org.lwjgl:lwjgl$it:$lwjglVersion"
        implementation base
        testRuntime "$base:$lwjglNatives"
        shadow "$base:$lwjglNatives"
    }

    compile files("${System.properties['java.home']}/../lib/tools.jar")
}

repositories {
    mavenCentral()
    maven { setUrl("https://dl.bintray.com/kotlin/kotlin-eap") }
    maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { url 'https://jitpack.io' }
}

task lightJar(type: Jar) {
    classifier = 'light'
    from sourceSets.main.output
    exclude 'extraFonts'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives lightJar
    archives sourcesJar
    archives javadocJar
}

shadowJar {
    exclude 'module-info.class'
}